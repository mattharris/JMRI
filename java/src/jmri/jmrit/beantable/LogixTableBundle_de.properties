# LogixTableBundle.properties
#
# Revision $Revision$
# by Simon Ginsburg
# German properties for the jmri.jmrit.LogixTableAction GUI elements

LogixSystemName = Logik Systemname
LogixSystemNameHint = Geben Sie den Systemnamen fuer ein neues Logikelement an, z.B. IX13
LogixUserName = Logik Nutzername
LogixUserNameHint = Geben Sie den Nutzernamen f\u00fcr ein neues Logikelement an, z.B. Signal 2 Steuerung
LogixUserNameHint2 = Geben Sie einen neuen Nutzernamen f\u00fcr ein Logikelement an, z.B. Signal 2 Steuerung
AddLogixMessage1 = Geben Sie einen Systemnamen und einen Nutzernamen an, danach
AddLogixMessage2 = auf "Logik Erzeugen" clicken und die Bedingungen hinzuf\u00fcgen.
ConditionalSystemName = Bedingung Systemnamen
ConditionalUserName = Bedingung Nutzernamen
ConditionalUserNameHint = Gebe Nutzernamen f\u00fcr Bedingung an, z.B. Signal 2 Rot

ColumnLabelSystemName = Systemname
ColumnLabelName = Name
ColumnLabelUserName = Nutzername
ColumnLabelState = Zustand
ColumnLabelVariableType = Variablentyp
ColumnLabelData1 = Daten 1
ColumnLabelData2 = Daten 2
ColumnLabelTriggersCalculation = Berechne Aktivierungen

TitleAddLogix = Logik Hinzuf\u00fcgen
TitleEditLogix = Logik Bearbeiten
TitleEditConditional = Bedingung Bearbeiten
TitleLogicalExpression = Logischer Ausdruck
TitleAction = Ereignisse
ConditionalTableTitle = Bedingungen (in der Reihenfolge der Berechnung, maximal
StateVariableTableTitle = Zustandsvariablen (maximal
LogicalExpressionTitle = Logischer Ausdruck
NotApplicableAbbreviation = N/A
ActionTitle = Ereignisse
Action1Title = Ereignis 1 - Ereignis Aktivierung 
Action2Title = Ereignis 2 - Ereignis Aktivierung
OnChangeToTrue = Beim \u00dcbergang zu "Wahr"
OnChangeToFalse = Beim \u00dcbergang zu "Unwahr"
OnChange = Beim \u00dcbergang
Action1Type = Ereignis 1 - Typus
Action2Type = Ereignis 2 - Typus 

True = Wahr
False = Unwahr
Unknown = Unbekannt
LogicAND = UND
LogicNOT = NICHT

CreateLogixButton = Erzeuge Logik
LogixCreateButtonHint = Clicken um neues Logikelement zu erzeugen
DoneButton = Erledigt
DoneButtonHint = Clicken um Nutzernamen zu speichern und zur Logiktabelle zur\u00fcckzukehren
DeleteLogixButton = Logik l\u00f6schen
DeleteLogixButtonHint = Clicken um die Logik mit allen Bedingungen zu l\u00f6schen
CancelButton = Abbrechen
CancelButtonHint = Clicken um abzubrechen und ohne \u00c4nderungen zur Logiktabelle zur\u00fcckzukehren
NewConditionalButton = Neue Bedingung
NewConditionalButtonHint = Clicke um neue Bedingung einzugeben
CalculateButton = Berechne
CalculateButtonHint = Clicke um Zustandsvariablen zu berechnen ohne Ereignisse
ReorderButton = Neu ordnen
ReorderButtonHint = Clicken um rechte Spalte in gew\u00fcnschter Reihenfolge zu ordnen
AddVariableButton = Zustandsvariable hinzuf\u00fcgen
AddVariableButtonHint = Clicken um neue Zeile in der Zustandstabelle zu erzeugen.
CheckVariableButton = Zustandsvariablen kontrollieren
CheckVariableButtonHint = In Zustandsspalte Klicken und dr\u00fccken um informationen in Zustandstabelle zu kontrollieren.
UpdateConditionalButton = Bedingungen aktualisieren
UpdateConditionalButtonHint = Druecken um \u00c4nderungen zu speichern und zu Logikbearbeitung zur\u00fcckzukehren
CancelConditionalButtonHint = Druecken um ohne \u00c4nderungen zu speichern zu Logikbearbeitung zur\u00fcckzukehren
DeleteConditionalButton = Bedingung l\u00f6schen
DeleteConditionalButtonHint = Dr\u00fccken um Bedingung zu l\u00f6schen und zu Logikbearbeitung zur\u00fcckzukehren

NameHintTurnout = Geben Sie Namen (System oder Nutzer) fuer Weiche um dieses Ereignis zu empfangen
NameHintSensor = Geben Sie Namen (System oder Nutzer) f\u00fcr Sensor um dieses Ereignis zu empfangen
NameHintSignal = Geben Sie Namen (System oder Nutzer) f\u00fcr Lichtsignal um dieses Ereignis zu empfangen
NameHintLight = Geben Sie Namen (System oder Nutzer) f\u00fcr Licht um dieses Ereignis zu empfangen
NameHintRoute = Geben Sie Namen (System oder Nutzer) f\u00fcr zu beeinflussende Weichenstrasse
NameHintMemory = Geben Sie Namen (System oder Nutzer) f\u00fcr zu beeinflussenden Speicher
NameHintLogix = Geben Sie Namen (System oder Nutzer) f\u00fcr Logik um dieses Ereignis zu empfangen
TurnoutSetHint = W\u00e4hle "Geradeaus" oder "Abzweigung" je nach Vorgabe der Weichenstellung
SensorSetHint = W\u00e4hle "Besetzt" oder "Frei" je nach Vorgabe des Sensorstatus
LightSetHint = W\u00e4hle "Ein" oder "Aus" je nach Vorgabe der Bedingung f\u00fcr Licht
SignalSetHint = W\u00e4hle geforderte Signalstellung
LockSetHint = W\u00e4hle ge- oder entsperrt
DataHintDelayedSensor = W\u00e4hle Verz\u00f6gerungszeit (Sekunden) f\u00fcr Sensor
DataHintDelayedTurnout = W\u00e4hle Verz\u00f6gerungszeit (Sekunden) f\u00fcr Weiche
DataHintMemory = W\u00e4hle geforderter Zustand des Speichers
DataHintSound = W\u00e4hle zu spielendes Soundfile
DataHintScript = W\u00e4hle zu startendes Skript
SetHintSound = Clicke im Dokumentwahldialog auf ein Soundfile der Wahl
SetHintScript = Clicke im Dokumentwahldialog auf ein Skriptfile der Wahl

ButtonDelete = L\u00f6schen
ButtonFirst = Erstes
ButtonNext = N\u00e4chstes
ReorderMessage = Bitte erst "Erstes" dr\u00fccken, danach "N\u00e4chstes", "N\u00e4chstes",... in der gew\u00fcnschten Anordnung.

ReminderTitle = Erinnerung
Reminder1 = Bitte das speichern der Logik auf die Festplatte. (W\u00e4hle "Speichern der Konfiguration" im Filemenu der Logiktabelle)

TypeSelectMessage = Wariablentyp ausw\u00e4hlen, danach ben\u00f6tigte Parameter eingeben
TypeSensorActive = Sensor Aktiv
TypeSensorInactive = Sensor Inaktiv
TypeSensorMessage = Namen (System oder Nutzer) f\u00fcr Sensor eingeben (e.g. CS2)
TypeTurnoutThrown = Weiche Abzweigung
TypeTurnoutClosed = Weiche Geradeaus
TypeTurnoutMessage = Namen (System oder Nutzer) f\u00fcr Weiche eingeben (e.g. LT12)
TypeConditionalTrue = Conditional True
TypeConditionalFalse = Conditional False
TypeConditionalMessage = Systemnamen f\u00fcr Bedingung eingeben (oder Nutzernamen falls Logik)
TypeLightOn = Licht An
TypeLightOff = Licht Aus
TypeLightMessage = Namen (System oder Nutzer) f\u00fcr Licht eingeben (e.g. CL21)
TypeMemoryEquals = Speicher mit Wert
TypeMemoryMessage = Namen (System oder Nutzer) f\u00fcr Speicher eingebenzugeh\u00f6riger Text in Datenfeld 1
TypeFastClockRange = Spieluhr Bereich
TypeClockMessage = Startzeit in Datenfeld 1, Endzeit in Datenfeld 2 (hh\:mm, 24-Stundenuhr)
TypeSignalHeadRed = Signal Rot
TypeSignalHeadYellow = Signal Gelb
TypeSignalHeadGreen = Signal Gr\u00fcn
TypeSignalHeadDark = Signal Dunkel
TypeSignalHeadFlashRed = Signal Rot Blinkend
TypeSignalHeadFlashYellow = Signal Gelb Blinkend
TypeSignalHeadFlashGreen = Signal Gr\u00fcn Blinkend
TypeSignalHeadLit = Signal Erleuchtet
TypeSignalHeadHeld = Signal Gehalten
TypeSignalMessage = Namen (System oder Nutzer) f\u00fcr Signal eingeben (e.g. IH34)
VariableOKMessage = Alle Zustandsvariablen sind in Ordnung.
VariableErrorMessage = Fehler aufgetreten, bitte korrigieren und erneut versuchen.

ActionNone = Keine
ActionSetTurnout = Setze Weiche
ActionSetSignal = Setze Signalbegriff
ActionSetSignalHeld = Setze Signal haltend
ActionClearSignalHeld = L\u00f6sche gehaltenes Signal
ActionSetSignalDark = Setze Signal Dunkel
ActionSetSignalLit = Setze Signal Erleuchtet
ActionTriggerRoute = Weichenstrasse anstossen
ActionSetSensor = Setze Sensor
ActionDelayedSensor = Setze Sensor verz\u00f6gert
ActionResetDelayedSensor = Setze Sensor verz\u00f6gert zur\u00fcck
ActionCancelSensorTimers = Abbrechen setzen Sensorverz\u00f6gerung
ActionDelayedTurnout = Setze Weiche verz\u00f6gert
ActionResetDelayedTurnout = Setze Weiche verz\u00f6gert zur\u00fcck
ActionCancelTurnoutTimers = Abbrechen setzen Weichenverz\u00f6gerung
ActionSetLight = Setze Licht
ActionSetMemory = Setze Speicher
ActionEnableLogix = Aktiviere Logik
ActionDisableLogix = Deaktiviere Logik
ActionPlaySound = Gerauschdokument abspielen
ActionRunScript = Skript ablaufen lassen
ActionTurnoutLock = Weichensperrung
ActionTypeHint = Ereignis ausw\u00e4hlen oder, falls nicht n\u00f6tig, "Keine" anw\u00e4hlen.

TurnoutClosed = Geradeaus
TurnoutThrown = Abzweigung
TurnoutUnlock = Entsperrt
TurnoutLock = Gesperrt
SensorActive = Aktiv
SensorInactive = Inaktiv
LightOn = Ein
LightOff = Aus

AppearanceRed = Rot
AppearanceYellow = Gelb
AppearanceGreen = Gr\u00fcn
AppearanceDark = Dunkel
AppearanceFlashRed = Rot Blinkend
AppearanceFlashYellow = Gelb Blinkend
AppearanceFlashGreen = Gr\u00fcn Blinkend

ErrorTitle = Fehler
Error1 = Eine Logik mit diesem Systemnamen existiert bereits.\nBitte anderen Namen w\u00e4hlen und erneut versuchen.
Error3 = Eine Logik mit diesem Nutzernamen existiert bereits.\nBitte anderen Namen w\u00e4hlen und erneut versuchen.
Error5 = Es existiert keine Logik mit diesem Namen.
Error6 = Dieser neue Nutzernamen wird bereits verwendet. Logik kann nicht aktualisiert werden.\nNutzernamen \u00e4ndern und erneut versuchen.
Error8 = Systemnamen ungueltig oder noch nicht eingegeben.\nGueltigen Systemnamen eingeben (e.g. IX3) und erneut versuchen.
Error10 = Dieser neue Nutzernamen wird bereits verwendet. Bedingung kann nicht aktualisiert werden.\nNutzernamen \u00e4ndern und erneut versuchen.
Error11 = Zur Reorganisation sind mindestens zwei Bedingungen notwendig.
Error13 = Der Name "{0}" passt zu keiner existierenden Weiche.\nNamen korrigieren oder Weiche erstellen und erneut versuchen.
Error14 = Der Name "{0}" passt zu keinem existierenden Signal.\nNamen korrigieren oder Signal erstellen und erneut versuchen.
Error15 = Der Name "{0}" passt zu keinem existierenden Sensor.\nNamen korrigieren oder Sensor erstellen und erneut versuchen.
Error16 = Der Name "{0}" passt zu keinem existierenden Licht.\nNamen korrigieren oder Licht erstellen und erneut versuchen.
Error17 = Der Name "{0}" passt zu keinem existierenden Speicher.\nNamen korrigieren oder Speicher erstellen und erneut versuchen.
Error18 = Der Name "{0}" passt zu keiner existierenden Weichenstrasse.\nNamen korrigieren oder Weichenstrasse erstellen und erneut versuchen.
Error19 = Korrigieren oder neu erstellen, falls n\u00f6tig und erneut versuchen.
Error20 = Der Name "{0}" passt zu keiner existierenden Bedingung.\nKorrekten System oder Nutzernamen f\u00fcr Bedingung eingeben.
Error21 = Anmerkung\: F\u00fcr das Arbeiten innerhalb der Tabelle bitte in die Spalte "Zustand" clicken und erneut versuchen.
Error22 = Der Name "{0}" passt zu keiner existierenden Logik.\nNamen korrigieren oder Logik erstellen und erneut versuchen.
Error23 = Ung\u00fcltige Sekundeneingabe fuer verz\u00f6gerte Sensorreaktion - {0}\nBitte Anzahl Sekunden eingeben (nur Ziffern) und erneut versuchen.
Error25 = Unsinnige oder fehlende Sekundeneingabe f\u00fcr verz\u00f6gerte Sensorreaktion - {0}\nBitte Anzahl Sekunden eingeben (nur Ziffern) und erneut versuchen.
Error26 = Ung\u00fcltige Zeiteingabe "{0}"\nZeit muss im hh\:mm Format eingegeben werden (e.g. 01\:30, 16\:00)\nf\u00fcr eine 24-Sunden Uhr. Bitte im korrekten Format eingeben und erneut versuchen.
Error27 = Ung\u00fcltige Sekundeneingabe f\u00fcr verz\u00f6gerte Sensorr\u00fccksetzreaktion - {0}\nBitte Anzahl Sekunden eingeben (nur Ziffern) und erneut versuchen.
Error28 = Unsinnige oder fehlende Sekundeneingabe f\u00fcr verz\u00f6gerte Sensorzur\u00fccksetzreaktion - {0}\nBitte Anzahl Sekunden eingeben (nur Ziffern) und erneut versuchen.
Error30 = Doppelte Nutzernameneingabe. Dieser Name ist bereits in Bedingung "{0}" verwendet.\nBitte anderen Nutzernamen aus der Tabelle ausw\u00e4hlen.
Error32 = Es k\u00f6nnen keine zwei Logiken gleichzeitig bearbeitet werden. Bitte erst Logik "{0}" fertig bearbeiten und erneut versuchen.
Error34 = Es k\u00f6nnen keine zwei Bedingungen gleichzeitig bearbeitet werden. Bitte erst Bedingung "{0}" fertig bearbeiten und erneut versuchen.
Error35 = Es wird gerade eine Bedingung bearbeitet. Bitte erst Bedingung "{0}" fertig bearbeiten und erneut versuchen.
Error36 = Es k\u00f6nnen keine weiteren Bedingungen fuer diese Logik eingegeben werden;\n da die Maximallimite erreicht ist.
Error37 = Es k\u00f6nnen keine weiteren Zustandsvariablen fuer diese Bedingung eingegeben werden;\n da die Maximallimite erreicht ist.
Error38 = Unsinniger oder fehlender Parameterwert f\u00fcr Wartezeit der verz\u00f6gerten Weichenaktion  - {0}\nBitte Anzahl Sekunden eingeben (nur Ziffern) und erneut versuchen.
Error39 = Ung\u00fcltiger Parameterwert f\u00fcr Wartezeit der verz\u00f6gerten Weichenaktion  - {0}\nBitte Anzahl Sekunden eingeben (nur Ziffern) und erneut versuchen.
Error40 = Unsinniger oder fehlender Parameterwert fuer Wartezeit der verzoegerten Weichenzuruecksetzaktion  - {0}\nBitte Anzahl Sekunden eingeben (nur Ziffern) und erneut versuchen.
Error41 = Ung\u00fcltiger Parameterwert f\u00fcr Wartezeit der verz\u00f6gerten Weichenzur\u00fccksetzaktion  - {0}\nBitte Anzahl Sekunden eingeben (nur Ziffern) und erneut versuchen.

WarnTitle = Warnung
ButtonDisabled = Ausgeschaltet weiterfahren
ButtonEnabled = Eingeschaltet weiterfahren
Logix = Logik
Warn1 = Die letzte Bedingung dieser Logik wurde gel\u00f6scht.
Warn2 = Eine Logik muss mindestens eine Bedingung enthalten um sinnvoll arbeiten zu k\u00f6nnen.
Warn3 = Die letzte Zustandsvariable fuer diese Bedingung wurde gel\u00f6scht.\nEine Bedingung muss mindestens eine Zustandsvariable enthalten um sinnvoll arbeiten zu koennen.
Warn5 = Die Bedingung "{0}" enthaelt keine Zustandsvariablen.\nEine Bedingung muss mindestens eine Zustandsvariable enthalten um sinnvoll arbeiten zu koennen.
Warn6 = Warnung - Eine \u00c4nderung {0} von {1} {2} startet die Berechnung dieser Logik.\nIn einigen Bedingungen wurde die Berechnung ein- und in anderen ausgeschaltet.\nBitte Berechnung \u00fcberall ausschalten, wenn jetzt keine Neuberechnung gew\u00fcnscht wird.
# Warn7 is inserted as {2} in Warn6 when the item being warned about 
# is a SignalHead, or otherwise has a specific value as part of the trigger.
Warn7 = von oder zu{0}

Warn9 = Die Bedingungen k\u00f6nnten in eine Endlosschlaufe f\u00fchren.\n Die beiden folgenden beeinflussen diese Logik und werden gleichzeitig von ihr beeinflusst\:\n
Warn10 = wurde ausgeschaltet wie vorgegeben.\nNicht vergessen, sie sp\u00e4ter wieder einzuschalten.
Seconds=Sekunden
After=, nach
to=bis
LogicOR=ODER
TypeEntryExitActive=Aktiv
TypeEntryExitInactive=Inaktiv
LabelValue=Wert
Sensor=Sensor
Turnout=Weiche
Light=Licht
Script=Skript
